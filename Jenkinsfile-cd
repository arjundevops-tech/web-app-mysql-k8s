pipeline {
    agent any
    stages {
        stage('Verify deployment details') {
            steps {
                script {
                    // You can add deployment verification logic here
                    println "Verifying deployment details..."
                }
            }
        }

        stage('Web app deployment') {
            steps {
                script {
                    // Use AWS credentials to authenticate and configure kubectl for EKS
                    withCredentials([[$class: 'AmazonWebServicesCredentialsBinding', credentialsId: 'eks-credentials']]) {
                        sh """
                            export AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID
                            export AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY
                            export AWS_DEFAULT_REGION=us-east-2
                            aws eks update-kubeconfig --region us-east-2 --name staging-demo

                            # Change directory to where Kubernetes manifests are located
                            cd k8s/web
                            
                            # Apply Kubernetes manifests
                            kubectl apply -f web-namespace.yml
                            kubectl apply -f web-deployment.yml
                            kubectl apply -f web-service.yml
                            kubectl apply -f web-ingress.yml
                        """
                    }
                }
            }
        }

        stage('db deployment') {
            steps {
                script {
                  withCredentials([[$class: 'AmazonWebServicesCredentialsBinding', credentialsId: 'eks-credentials']]) {
                        sh """
                            export AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID
                            export AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY
                            export AWS_DEFAULT_REGION=us-east-2
                            aws eks update-kubeconfig --region us-east-2 --name staging-demo

                            # Change directory to where Kubernetes manifests are located
                            cd k8s/db
                            
                            # Apply Kubernetes manifests
                            kubectl apply -f db-namespace.yml
                            kubectl apply -f db-storage-class.yml
                            kubectl apply -f db-pv.yml
                            kubectl apply -f db-pvc.yml
                            kubectl apply -f db-secrets.yml
                            kubectl apply f db-deployment.yml
                            kubectl apply f db-service.yml
                             
                        """
                    }
                }
            }
        }
    }
}
